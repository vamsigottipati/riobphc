{
  "_from": "vue2-google-maps@^0.10.2",
  "_id": "vue2-google-maps@0.10.5",
  "_inBundle": false,
  "_integrity": "sha512-QXgEPIqX1v4MNQL9ihKBf+OSoI0ZTySeDaXAF4QbVOhpe9gqXG6LaNvTJMjGSksIfGdsaZkgww0Hmhok40thGg==",
  "_location": "/vue2-google-maps",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue2-google-maps",
    "fetchSpec": "^0.10.2",
    "name": "vue2-google-maps",
    "raw": "vue2-google-maps@^0.10.2",
    "rawSpec": "^0.10.2",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue2-google-maps/-/vue2-google-maps-0.10.5.tgz",
  "_shasum": "84058fe241a878011a1e08a42b32cb36e9c5e1da",
  "_shrinkwrap": null,
  "_spec": "vue2-google-maps@^0.10.2",
  "_where": "/Users/vamsikrishna/Documents/unclebob/rio",
  "author": {
    "name": "Daniel Sim, Guillaume Leclerc"
  },
  "browserify": {
    "transform": [
      "babelify",
      "vueify"
    ]
  },
  "bugs": {
    "url": "https://github.com/xkjyeah/vue-google-maps/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "babel-runtime": "^5.8.0",
    "marker-clusterer-plus": "^2.1.4"
  },
  "deprecated": false,
  "description": "This is a google map component for Vue.js, updated for Vue 2 compatibility",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.3",
    "babel-plugin-minify-dead-code-elimination": "^0.4.0",
    "babel-plugin-transform-inline-environment-variables": "^0.4.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "babel-runtime": "^5.8.0",
    "code": "^5.2.0",
    "cross-env": "^1.0.8",
    "css-loader": "^0.23.0",
    "eslint": "^3.17.1",
    "eslint-config-standard": "^7.0.1",
    "eslint-plugin-html": "^2.0.1",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^2.1.1",
    "file-loader": "^0.8.4",
    "gh-pages": "^0.11.0",
    "jsdom": "^9.8.3",
    "json-loader": "^0.5.7",
    "lab": "^15.3.0",
    "less": "^2.5.3",
    "less-loader": "^2.2.2",
    "lodash": "^4.15.0",
    "lodash-es": "^4.17.4",
    "lodash-webpack-plugin": "^0.11.4",
    "node-sass": "^4.8.3",
    "puppeteer": "^1.1.0",
    "raw-loader": "^0.5.1",
    "sass-loader": "^7.0.1",
    "shx": "^0.2.0",
    "style-loader": "^0.13.0",
    "stylus-loader": "^1.4.0",
    "template-html-loader": "0.0.3",
    "vue": "^2.5.0",
    "vue-hot-reload-api": "^1.2.0",
    "vue-html-loader": "^1.0.0",
    "vue-loader": "^14.2.2",
    "vue-router": "^2.7.0",
    "vue-template-compiler": "^2.1.6",
    "webpack": "^4.0.1",
    "webpack-cli": "^2.0.10",
    "yaml-loader": "^0.5.0"
  },
  "homepage": "https://github.com/xkjyeah/vue-google-maps#readme",
  "license": "MIT",
  "main": "dist/main.js",
  "name": "vue2-google-maps",
  "optionalDependencies": {},
  "readme": "# CONTRIBUTORS NEEDED!\n\nIt's been increasingly difficult for me to make time to maintain this project.\nMy projects at work have also gradually migrated away from Google Maps (but still on Vue -- Vue's awesome!),\nso there's less and less incentive to maintain.\n\nIf you have time to contribute to a rather frequently used library, feel free to make a PR!\nFor more background, please refer to [this issue](https://github.com/xkjyeah/vue-google-maps/issues/514).\n\nWhat's urgently needed are:\n\n1. Better automated tests\n2. Better integration tests with the popular frameworks, especially Nuxt and Vue template\n3. Better documentation (examples, recommendations)\n\nThe above three will go a long way to keeping the project maintainable and contributable, and will address many of the open issues.\n\n# vue-google-maps\n\n[![Build Status](https://travis-ci.org/xkjyeah/vue-google-maps.svg?branch=vue2)](https://travis-ci.org/xkjyeah/vue-google-maps)\n\n## Vue-2 port of vue-google-maps\n\nThis is the Vue 2.x port of vue-google-maps!\n\n## Installation\n\n### With npm (Recommended)\n\n```\nnpm install vue2-google-maps\n```\n\n### Manually\n\nJust download `dist/vue-google-maps.js` file and include it from your HTML.\n\nBe aware that if you use this method, you cannot use TitleCase for your components and your attributes.\nThat is, instead of writing `<GmapMap>`, you need to write `<gmap-map>`.\n\n[Example](http://xkjyeah.github.io/vue-google-maps/overlay.html) ([Source code](https://github.com/xkjyeah/vue-google-maps/blob/no-deferred-ready/examples/overlay.html)).\n\n## Basic usage / Documentation\n\n### Get an API key from Google\n\n[Generating an Google Maps API key](https://developers.google.com/maps/documentation/javascript/get-api-key).\n\n### Quickstart (Webpack, Nuxt):\n\nIf you are using Webpack and Vue file components, just add the following to your code!\n\n```vue\n<GmapMap\n  :center=\"{lat:10, lng:10}\"\n  :zoom=\"7\"\n  map-type-id=\"terrain\"\n  style=\"width: 500px; height: 300px\"\n>\n  <GmapMarker\n    :key=\"index\"\n    v-for=\"(m, index) in markers\"\n    :position=\"m.position\"\n    :clickable=\"true\"\n    :draggable=\"true\"\n    @click=\"center=m.position\"\n  />\n</GmapMap>\n```\n\nIn your `main.js` or inside a Nuxt plugin:\n\n```js\nimport Vue from 'vue'\nimport * as VueGoogleMaps from 'vue2-google-maps'\n\nVue.use(VueGoogleMaps, {\n  load: {\n    key: 'YOUR_API_TOKEN',\n    libraries: 'places', // This is required if you use the Autocomplete plugin\n    // OR: libraries: 'places,drawing'\n    // OR: libraries: 'places,drawing,visualization'\n    // (as you require)\n\n    //// If you want to set the version, you can do so:\n    // v: '3.26',\n  },\n\n  //// If you intend to programmatically custom event listener code\n  //// (e.g. `this.$refs.gmap.$on('zoom_changed', someFunc)`)\n  //// instead of going through Vue templates (e.g. `<GmapMap @zoom_changed=\"someFunc\">`)\n  //// you might need to turn this on.\n  // autobindAllEvents: false,\n\n  //// If you want to manually install components, e.g.\n  //// import {GmapMarker} from 'vue2-google-maps/src/components/marker'\n  //// Vue.component('GmapMarker', GmapMarker)\n  //// then disable the following:\n  // installComponents: true,\n})\n```\n\nIf you need to gain access to the `Map` instance (e.g. to call `panToBounds`, `panTo`):\n```vue\n<template>\n<GmapMap ref=\"mapRef\" ...>\n</GmapMap>\n</template>\n<script>\nexport default {\n  mounted () {\n    // At this point, the child GmapMap has been mounted, but\n    // its map has not been initialized.\n    // Therefore we need to write mapRef.$mapPromise.then(() => ...)\n\n    this.$refs.mapRef.$mapPromise.then((map) => {\n      map.panTo({lat: 1.38, lng: 103.80})\n    })\n  }\n}\n```\n\nIf you need to gain access to the `google` object:\n```vue\n<template>\n  <GmapMarker ref=\"myMarker\"\n    :position=\"google && new google.maps.LatLng(1.38, 103.8)\" />\n</template>\n<script>\nimport {gmapApi} from 'vue2-google-maps'\n\nexport default {\n  computed: {\n    google: gmapApi\n  }\n}\n</script>\n```\n\n### Nuxt.js config\n\nAdd the following to your `nuxt.config.js`'s `build.extend()`:\n```js\nif (!ctx.isClient) {\n  // This instructs Webpack to include `vue2-google-maps`'s Vue files\n  // for server-side rendering\n  config.externals.splice(0, 0, function (context, request, callback) {\n    if (/^vue2-google-maps($|\\/)/.test(request)) {\n      callback(null, false)\n    } else {\n      callback()\n    }\n  })\n}\n```\n\nIn addition, for IE11 support, you will need the `babel-polyfill` vendor:\n```js\n// nuxt.config.js\nbuild: {\n  vendors: ['babel-polyfill']\n}\n```\n\n### IE11 Support using the Vue CLI Tool\n\nFor IE11 support while using the [Vue CLI tools](https://cli.vuejs.org/) you will need to add the following polyfills to the `babel.config.js` file:\n```js\n// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      '@vue/app', {\n        polyfills: [\n          'es7.object.entries',\n          'es6.promise'\n        ]\n      }\n    ]\n  ]\n}\n```\n\n### Officially supported components:\n\nThe list of officially support components are:\n\n- Rectangle, Circle\n- Polygon, Polyline\n- Marker\n- InfoWindow\n- Autocomplete\n- Cluster* (via `marker-clusterer-plus`)\n\nYou can find examples of this [on the website](http://xkjyeah.github.io/vue-google-maps/).\nAuto-generated API documentation for these components are [here](http://xkjyeah.github.io/vue-google-maps/autoapi.html).\n\nFor `Cluster`, you **must** import the class specifically, e.g.\n```js\nimport GmapCluster from 'vue2-google-maps/dist/components/cluster' // replace src with dist if you have Babel issues\n\nVue.component('GmapCluster', GmapCluster)\n```\nInconvenient, but this means all other users don't have to bundle the marker clusterer package\nin their source code.\n\n### Adding your own components\n\nIt should be relatively easy to add your own components (e.g. Heatmap, GroundOverlay). please refer to the\n[source code for `MapElementFactory`](https://github.com/xkjyeah/vue-google-maps/blob/vue2/src/components/mapElementFactory.js).\n\nExample for [DirectionsRenderer](https://developers.google.com/maps/documentation/javascript/reference/3/#DirectionsRenderer):\n```js\n// DirectionsRenderer.js\nimport {MapElementFactory} from 'vue2-google-maps'\n\nexport default MapElementFactory({\n  name: 'directionsRenderer',\n  ctr: () => google.maps.DirectionsRenderer,\n  //// The following is optional, but necessary if the constructor takes multiple arguments\n  //// e.g. for GroundOverlay\n  // ctrArgs: (options, otherProps) => [options],\n  events: ['directions_changed'],\n\n  // Mapped Props will automatically set up\n  //   this.$watch('propertyName', (v) => instance.setPropertyName(v))\n  //\n  // If you specify `twoWay`, then it also sets up:\n  //   google.maps.event.addListener(instance, 'propertyName_changed', () => {\n  //     this.$emit('propertyName_changed', instance.getPropertyName())\n  //   })\n  //\n  // If you specify `noBind`, then neither will be set up. You should manually\n  // create your watchers in `afterCreate()`.\n  mappedProps: {\n    routeIndex: { type: Number },\n    options: { type: Object },\n    panel: { },\n    directions: { type: Object },\n    //// If you have a property that comes with a `_changed` event,\n    //// you can specify `twoWay` to automatically bind the event, e.g. Map's `zoom`:\n    // zoom: {type: Number, twoWay: true}\n  },\n  // Any other properties you want to bind. Note: Must be in Object notation\n  props: {},\n  // Actions you want to perform before creating the object instance using the\n  // provided constructor (for example, you can modify the `options` object).\n  // If you return a promise, execution will suspend until the promise resolves\n  beforeCreate (options) {},\n  // Actions to perform after creating the object instance.\n  afterCreate (directionsRendererInstance) {},\n})\n```\n\nThereafter, it's easy to use the newly-minted component!\n```vue\n<template>\n  <GmapMap :zoom=\"...\" :center=\"...\">\n    <DirectionsRenderer />\n  </GmapMap>\n</template>\n<script>\nimport DirectionsRenderer from './DirectionsRenderer.js'\n\nexport default {\n  components: {DirectionsRenderer}\n}\n</script>\n```\n\n## Testing\n\nMore automated tests should be written to help new contributors.\n\nMeanwhile, please test your changes against the suite of [examples](examples).\n\nImprovements to the tests are welcome :)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xkjyeah/vue-google-maps.git"
  },
  "scripts": {
    "build": "npm run build-babel && npm run build-webpack",
    "build-babel": "shx mkdir -p dist && shx rm -r dist && cross-env BUILD_DEV=1 babel src -D --out-dir dist && echo {} > dist/.babelrc",
    "build-examples": "npm run build-examples-before && npm run build-examples-webpack",
    "build-examples-before": "npm run build && shx cp dist/vue-google-maps.js examples",
    "build-examples-webpack": "cd examples && cross-env NODE_ENV=production webpack",
    "build-webpack": "cross-env NODE_ENV=production webpack --progress --hide-modules",
    "deploy": "npm run build-examples && gh-pages -d examples",
    "lab-tests": "lab -T test/test-setup/babel-transform.js -l -S test",
    "lint": "eslint --ext .vue,.js src && eslint --ext .vue,.html,.js test",
    "prepare": "npm run build",
    "test": "npm run lab-tests && npm run lint"
  },
  "version": "0.10.5"
}
