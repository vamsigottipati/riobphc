{"version":3,"file":null,"sources":["../src/validation.js","../src/transformers.js","../src/index.js"],"sourcesContent":["\nimport isArray from 'lodash.isarray';\n\n// Change an hsl object { hue: int, sat: int, lit: int } to an array [int, int, int]\nexport const hslObjToArray = ({hue, sat, lit}) => [hue, sat, lit];\n\n// Returns a boolean telling if this is a valid hsl array [int, int, int]\nexport const isHSLArray = c =>\n\tisArray(c) && c.length === 3 &&\n\ttypeof c[0] === 'number' && c[0] >= 0 && c[0] <= 360 &&\n\ttypeof c[1] === 'number' && c[1] >= 0 && c[1] <= 100 &&\n\ttypeof c[2] === 'number' && c[2] >= 0 && c[2] <= 100;\n\n// Returns a boolean telling if this is a valid hsl object { hue: int, sat: int, lit: int }\nexport const isHSLObject = c =>\n\ttypeof c === 'object' && isHSLArray(hslObjToArray(c));\n\n// Returns a boolean telling if this is a valid hex color '#000000'\nexport const isHexColor = c => typeof c === 'string' && c[0] === '#' && (c.length === 7 || c.length === 4);\n","\nimport isArray from 'lodash.isarray';\nimport _hslToHex from 'hsl-to-hex';\nimport hexToHsl from 'hex-to-hsl';\n\nimport {isHSLArray, isHSLObject, isHexColor, hslObjToArray} from './validation';\n\n// Return an HSL array whatever the color type is passed\nexport const colorToHSL = c => {\n\tif (isHSLArray(c)) {\n\t\treturn c;\n\t}\n\n\tif (isHSLObject(c)) {\n\t\treturn hslObjToArray(c);\n\t}\n\n\tif (isHexColor(c)) {\n\t\treturn hexToHsl(c);\n\t}\n\n\treturn c;\n};\n\n// Returns an hex string value, whatever color type is passed in argument\nexport const colorToHex = c => {\n\tif (isArray(c)) {\n\t\treturn _hslToHex(...c);\n\t}\n\n\tif (isHSLObject(c)) {\n\t\treturn _hslToHex(c.hue, c.sat, c.lit);\n\t}\n\n\tif (isHexColor(c)) {\n\t\treturn c;\n\t}\n\n\treturn c;\n};\n","\nimport flow from 'lodash.flow';\nimport isFunction from 'lodash.isfunction';\nimport {colorToHSL, colorToHex} from './transformers';\nimport {isHSLArray, isHSLObject, isHexColor} from './validation';\n\n// Makes sure the function gets an HSL object\nconst withHSL = func => c => func(colorToHSL(c));\n\nconst isValidColor = col => col && (isHSLArray(col) || isHSLObject(col) || isHexColor(col));\n\n// Return hex from a color\nexport const color = (col, ...colAlts) => {\n\t// If the color passed is a function, execute it\n\tif (isFunction(col)) {\n\t\tcol = col();\n\t}\n\n\t// If nothing is passed, return a black color by default\n\tif (!col) {\n\t\treturn '#000000';\n\t}\n\n\t// Validate\n\tif (!isValidColor(col)) {\n\t\tthrow new Error('Color passed is not a valid color');\n\t}\n\n\t// When alterations are passed, process the color and return an hex value\n\tif (colAlts.length) {\n\t\tlet alteration = flow(colAlts);\n\t\treturn colorToHex(alteration(col));\n\t}\n\n\t// If just a color is passed, return a function which takes alterations\n\treturn (...alts) => {\n\t\tconst firstArg = alts[0];\n\t\tif (firstArg && isValidColor(firstArg)) {\n\t\t\treturn color(firstArg);\n\t\t}\n\n\t\t// Return the altered color wrapper if alterations are passed\n\t\tif (alts.length) {\n\t\t\tlet alteration = flow(alts);\n\t\t\treturn color(alteration(col));\n\t\t}\n\n\t\t// If no argument is passed, return the hex color\n\t\treturn colorToHex(col);\n\t};\n};\n\n// British proxy\nexport const colour = color;\n\n// Alter lightness of an hsl color\nexport const lightness = percent => withHSL(([hue, sat, lit]) => [hue, sat, lit + percent]);\n\n// Alter saturation of an hsl color\nexport const saturation = percent => withHSL(([hue, sat, lit]) => [hue, sat + percent, lit]);\n\n// Alter hue of an hsl color\nexport const hue = percent => withHSL(([hue, sat, lit]) => [hue + percent, sat, lit]);\n"],"names":["hslObjToArray","hue","sat","lit","isHSLArray","isArray","c","length","isHSLObject","isHexColor","colorToHSL","hexToHsl","colorToHex","_hslToHex","withHSL","func","isValidColor","col","color","colAlts","isFunction","Error","alteration","flow","alts","firstArg","colour","lightness","percent","saturation"],"mappings":"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"}